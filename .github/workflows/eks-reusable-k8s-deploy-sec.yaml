on:
  workflow_call:
    inputs:
      runs-on:
        description: Platform to execute on
        type: string
        default: ubuntu-latest
        required: false
      tag: 
        description: Image tag to deploy
        type: string
        required: true
      namespace:
        description: Kubernetes namespace
        type: string
        required: true
      environment:
        required: true
        type: string
      secrets_list:
        required: true
        type: string
#    secrets:
#      kube-config:
#        description: KUBE_CONFIG file
#        required: true
#      aws-access-key-id:
#        description: AWS Access Key ID
#        required: false
#      aws-secret-access-key:
#        description: AWS Secret Access Key
#        required: false
jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    environment: ${{ inputs.environment }}
    steps:
      - name: 'Setup: Git checkout'
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846

      - name: 'Setup: Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@05b148adc31e091bafbaf404f745055d4d3bc9d2
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id_nonprod_app_deploy }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key_nonprod_app_deploy }}
          aws-region: eu-west-1

      - name: 'Get Kubeconf EKS'
        run: |
          aws eks update-kubeconfig --region eu-west-1 --name eks-cluster-nonprod         
#          aws eks update-kubeconfig --region eu-west-1 --name ${{ vars.EKS_CLUSTER_NAME_NONPROD }}  

      - name: getsecrets
        env: 
          input_json: ${{ toJson(secrets) }}
          secrets_list: ${{ inputs.secrets_list }}
          environment: ${{ inputs.environment}}
        run: |
          k8secname=$(echo "$environment" | cut -d'/' -f2)
          IFS=',' read -ra secrets_array <<< "$secret_name"
          create=("kubectl" "create" "secret" "generic" "test1")
          delete=("kubectl" "delete" "secret" "--ignore-not-found" "test1")
          for secret_key in "${secrets_array[@]}"; do
            if [[ $input_json == *"$secret_key"* ]]; then
              secret_value=$(echo "$input_json" | jq -r ".$secret_key")
              create+=("--from-literal=""$secret_key=$secret_value")
            fi
          done
          echo "${create[@]}"
          ${delete[@]}
          ${create[@]}
#      - name: 'Deploy: Kubernetes apply'
#        run: |
#          kubectl delete -R -f build/${{ inputs.namespace }} --ignore-not-found=true -n${{ inputs.namespace }} --grace-period=10
#          kubectl apply -R -f build/${{ inputs.namespace }} -n${{ inputs.namespace }}



