on:
  workflow_call:
    inputs:
      runs-on:
        description: Platform to execute on
        type: string
        default: nonprod-deployment-runner-19-12-2
        required: false
      namespace:
        description: Kubernetes namespace
        type: string
        required: true
      aws-region:
        description: AWS region
        type: string
        required: true
        default: eu-west-1
      role-to-assume:
        description: AWS IAM role to assume
        type: string
        default: RFCX-EKS-DeployRole
        required: false
      cluster-name:
        description: EKS Cluster name
        type: string
        required: true
      environment:
        required: true
        type: string
      includes:
        required: true
        type: string
      name:
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    environment: ${{ inputs.environment }}
    steps:
      - name: 'Setup: Git checkout'
        # v4 (4.1.0) @ Sep 2022 https://github.com/actions/checkout/tags
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

      - name: 'Setup: Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@8c3f20df09ac63af7b3ae3d7c91f105f857d8497
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.role-to-assume }}

      - name: 'Get Kubeconf EKS'
        run: |
          aws eks update-kubeconfig --region ${{ inputs.aws-region }} --name ${{ inputs.cluster-name }}

      - name: 'Setup: Create yaml file'
        run: |
          cat <<EOF > secret.yaml
          apiVersion: v1
          kind: Secret
          metadata:
            name: ${{ inputs.name }}
            namespace: ${{ inputs.namespace }}
          type: Opaque
          stringData:
          EOF

      - name: 'Setup: Extract secrets and append to yaml'
        env:
          SECRETS_JSON: ${{ toJson(secrets) }}
        run: |
          keys=${{ inputs.includes }}
          for key in ${keys//,/ }
          do
              value=$(echo "$SECRETS_JSON" | jq -r ".$key")
              if [[ "$value" == "null" ]]; then
                  echo "$key not found in GitHub secrets. Abort!"
                  exit 1
              fi
              echo "Found: $key"
              echo -e "  $key: \"$value\"\n" >> secret.yaml
          done

      - name: 'Setup: Deploy secrets file'
        run: |
          kubectl apply -f secret.yaml

